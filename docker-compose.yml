version: '3.8'

services:
  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:v1.12.5
    container_name: claude-context-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_storage:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:6333/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - claude-context-network

  # Ollama for embeddings
  ollama:
    image: ollama/ollama:latest
    container_name: claude-context-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_storage:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_ORIGINS=*
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:11434/api/tags || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - claude-context-network
    # GPU support (uncomment if you have NVIDIA GPU)
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]

  # Ollama model initialization service
  ollama-setup:
    image: ollama/ollama:latest
    container_name: claude-context-ollama-setup
    depends_on:
      ollama:
        condition: service_healthy
    volumes:
      - ollama_storage:/root/.ollama
    environment:
      - OLLAMA_HOST=ollama:11434
    command: >
      sh -c "
        echo 'Waiting for Ollama to be ready...' &&
        sleep 10 &&
        echo 'Pulling nomic-embed-text model...' &&
        ollama pull nomic-embed-text &&
        echo 'Model pulled successfully!' &&
        echo 'Available models:' &&
        ollama list
      "
    networks:
      - claude-context-network
    restart: "no"

  # Claude Context MCP Server
  claude-context-mcp:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: claude-context-mcp
    depends_on:
      qdrant:
        condition: service_healthy
      ollama:
        condition: service_healthy
      ollama-setup:
        condition: service_completed_successfully
    environment:
      # Embedding configuration
      - EMBEDDING_PROVIDER=Ollama
      - OLLAMA_HOST=http://ollama:11434
      - OLLAMA_MODEL=nomic-embed-text
      
      # Vector database configuration
      - VECTOR_DATABASE=Qdrant
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      
      # Server configuration
      - MCP_SERVER_NAME=Claude Context MCP Server (Docker)
      - MCP_SERVER_VERSION=1.0.0
      - NODE_ENV=production
      
      # Optional: Custom extensions and ignore patterns
      # - CUSTOM_EXTENSIONS=.vue,.svelte,.astro
      # - CUSTOM_IGNORE_PATTERNS=static/**,*.tmp
    volumes:
      # Mount your codebase(s) that you want to index
      - ./:/workspace:ro
      # Optional: Mount additional codebases
      # - /path/to/your/project:/projects/my-project:ro
    stdin_open: true
    tty: true
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep -q '[n]ode.*mcp' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - claude-context-network

volumes:
  qdrant_storage:
    driver: local
  ollama_storage:
    driver: local

networks:
  claude-context-network:
    driver: bridge
    name: claude-context-network